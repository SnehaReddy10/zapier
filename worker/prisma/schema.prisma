// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AvailableActions {
  id       String   @id @default(uuid())
  action   String
  metaData String
  Action   Action[]
  image    String?
  events   Event[]
}

model AvailableTriggers {
  id       String    @id @default(uuid())
  trigger  String
  metaData String
  Trigger  Trigger[]
  image    String?
  events   Event[]
  HookReq  HookReq[]
}

model Zap {
  id        String   @id @default(uuid())
  trigger   Trigger?
  actions   Action[]
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  isRunning Boolean
}

model User {
  id        String @id @default(uuid())
  email     String
  firstname String
  lastname  String
  password  String
  zaps      Zap[]
}

model Action {
  id                String           @id @default(uuid())
  action            AvailableActions @relation(fields: [availableActionId], references: [id])
  availableActionId String
  zap               Zap?             @relation(fields: [zapId], references: [id])
  zapId             String?
  event             Event?           @relation(fields: [eventId], references: [id])
  eventId           String?
  metadata          String?
}

model Trigger {
  id                 String            @id @default(uuid())
  trigger            AvailableTriggers @relation(fields: [availableTriggerId], references: [id])
  availableTriggerId String
  zap                Zap?              @relation(fields: [zapId], references: [id])
  zapId              String            @unique
  event              Event?            @relation(fields: [eventId], references: [id])
  eventId            String?
}

model zaps {
  id       String @unique @default(uuid())
  zapId    String
  userId   String
  metadata String
}

model zapRun {
  id       String @unique @default(uuid())
  zapId    String
  userId   String
  metadata String
}

model Event {
  id                  String             @id @default(uuid())
  name                String
  AvailableTrigger    AvailableTriggers? @relation(fields: [availableTriggersId], references: [id])
  availableTriggersId String?
  AvailableAction     AvailableActions?  @relation(fields: [availableActionsId], references: [id])
  availableActionsId  String?
  Action              Action[]
  Trigger             Trigger[]
  metaData            String?
}

model HookReq {
  id                  String            @id @default(uuid())
  payload             String
  trigger             AvailableTriggers @relation(fields: [availableTriggersId], references: [id])
  availableTriggersId String
}
